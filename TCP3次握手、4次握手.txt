TCP三次握手
一、客户端发送请求建立连接的SYN包（SYN(x)）
二、服务器接受到SYN包，发送确认建立连接的ACK包，并且同时发送SYN包到客户端，请求建立连接  (SYN(y)，ACK(x+1))
三、客户端接受到服务器发送的SYN包后发送ACK确认包到服务器（ACK(y+1)）

TCP四次握手
TCP四次握手断开连接
一、主动断开端发送FIN包，请求断开连接，进入终止等待状态
二、被动断开端接受到FIN包，会发送ACK确认包到主动断开端，并通知应用程序断开
三、主动断开端接受到ACK包后，继续终止状态等待。被动断开端之后发送FIN请求断开包，并进入确认状态
四、主动断开端接受到FIN关闭请求包后，发送ACK确认包，并进入时间等待状态，若这期间又收到FIN包，会重新发送ACK确认包，并刷新时间等待状态

1、为什么是四次握手而不是三次握手？
原因在于建立请求时，服务器可以在收到SYN包后，同时发送ACK确认包以及SYN包，请求与客户端建立连接。而断开连接时，被动断开端在接受到FIN包后，会立即发送ACK确认包，
但通知应用程序断开到再次发送FIN包需要时间，因此不是同时发送数据包。

2、为什么需要时间等待状态？
主动断开端在接受到FIN包后，发送ACK包。这时有可能网络波动，接受方没有接受到ACK包，这时被动断开端会每隔一段时间发送一次FIN包，因此在时间等待期间，若主动断开端
又接受到FIN包会重新发送ACK包并刷新时间（只有当被动断开端接受到ACK包之后才会真正断开连接）。

3、为什么不能用两次握手建立连接？
因为服务器接受到SYN包之后，同时发送SYN+ACK，但客户端有可能没有接受到ACK包，导致连接实际上是没有建立的

4、若客户端未响应，会出现什么状况？
TCP建立连接后有一个保活计时（2小时）。服务器端每次收到客户端的请求后会重置这个计时，若期间未接受到请求，服务器端会发送一个探测报文段，每隔75s发送一次，发送10次，
之后会断开连接。