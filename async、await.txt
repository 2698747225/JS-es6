async、await
async用于声明之后的函数包含异步内容，async申明的函数将会自动返回一个Promise对象（若函数返回的是普通值，将会被封装到promise.resolve中）

await必须申明在async函数中。后面可以跟随一个async函数（返回promise的函数），或普通表达式（会立即执行，不阻塞）

await会阻塞进程。可以使多个异步函数同步执行

造成阻塞的是await，  async函数不会造成阻塞（就是正常的返回promise对象，依然以异步任务的方式继续执行下面的同步表达式）。async函数内会阻塞，函数外依然异步

async function timeout(){
	return new Promise((resolve)=>{
		setTimeout(()=>{
			resolve('timeout');
		},5000);
	});
}

async function test(){
	await timeout();    // 会等待timeout的5s执行完再执行
	await console.log(1);
	console.log(2);
}
test();
1、2都会延迟5s打印;